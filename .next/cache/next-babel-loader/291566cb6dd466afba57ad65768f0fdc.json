{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport App, { Container } from \"next/app\";\nimport React from \"react\";\nimport { ApolloProvider } from \"react-apollo\";\nimport withApollo from \"../lib/withApollo\";\n\nvar MyApp = /*#__PURE__*/function (_App) {\n  _inherits(MyApp, _App);\n\n  var _super = _createSuper(MyApp);\n\n  function MyApp() {\n    _classCallCheck(this, MyApp);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(MyApp, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          Component = _this$props.Component,\n          pageProps = _this$props.pageProps,\n          apolloClient = _this$props.apolloClient;\n      return __jsx(Container, null, __jsx(ApolloProvider, {\n        client: apolloClient\n      }, __jsx(Component, pageProps)));\n    }\n  }]);\n\n  return MyApp;\n}(App);\n\nexport default withApollo(MyApp);","map":{"version":3,"sources":["C:/wamp64/www/hello-next/pages/_app.tsx"],"names":["App","Container","React","ApolloProvider","withApollo","MyApp","props","Component","pageProps","apolloClient"],"mappings":";;;;;;;;;;;AAAA,OAAOA,GAAP,IAAcC,SAAd,QAA+B,UAA/B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,cAA/B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;IAEMC,K;;;;;;;;;;;;;6BACK;AAAA,wBACwC,KAAKC,KAD7C;AAAA,UACCC,SADD,eACCA,SADD;AAAA,UACYC,SADZ,eACYA,SADZ;AAAA,UACuBC,YADvB,eACuBA,YADvB;AAEP,aACE,MAAC,SAAD,QACE,MAAC,cAAD;AAAgB,QAAA,MAAM,EAAEA;AAAxB,SACE,MAAC,SAAD,EAAeD,SAAf,CADF,CADF,CADF;AAOD;;;;EAViBR,G;;AAapB,eAAeI,UAAU,CAACC,KAAD,CAAzB","sourcesContent":["import App, { Container } from \"next/app\";\r\nimport React from \"react\";\r\nimport { ApolloProvider } from \"react-apollo\";\r\nimport withApollo from \"../lib/withApollo\";\r\n\r\nclass MyApp extends App<any> {\r\n  render() {\r\n    const { Component, pageProps, apolloClient } = this.props;\r\n    return (\r\n      <Container>\r\n        <ApolloProvider client={apolloClient}>\r\n          <Component {...pageProps} />\r\n        </ApolloProvider>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withApollo(MyApp);"]},"metadata":{},"sourceType":"module"}